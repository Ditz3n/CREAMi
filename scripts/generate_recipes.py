import pandas as pd
import os
import glob
import hashlib
from datetime import datetime
import csv # Importerer CSV-modulet for bedre kontrol

# ---- KONFIGURATION ----
# S칮rg for at disse stier passer til din mappestruktur
# Vi antager at scriptet k칮res fra 'scripts/' mappen
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) # G친r op til roden af projektet
DATA_DIR = os.path.join(BASE_DIR, 'data')
RECIPE_DATA_DIR = os.path.join(DATA_DIR, 'recipes')
CONTENT_DIR = os.path.join(BASE_DIR, 'content')
INGREDIENTS_PAGE_PATH = os.path.join(CONTENT_DIR, 'ingredients', '_index.md')
RECIPE_CONTENT_DIR = os.path.join(CONTENT_DIR, 'recipes')
STABILIZER_PAGE_PATH = os.path.join(CONTENT_DIR, 'stabilizer-mix', 'index.md') # Sti til den nye side

# ---- HJ칁LPEFUNKTION TIL AT SKRIVE FILER KUN VED 칁NDRINGER ----
def write_if_changed(filepath, new_content):
    """
    Skriver kun til filen, hvis det nye indhold er forskelligt fra det eksisterende,
    eller hvis filen ikke eksisterer. Returnerer True hvis filen blev skrevet.
    """
    os.makedirs(os.path.dirname(filepath), exist_ok=True)
    should_write = True
    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            existing_content = f.read()
        # Sammenlign et hash af indholdet for effektivitet
        if hashlib.md5(new_content.encode()).hexdigest() == hashlib.md5(existing_content.encode()).hexdigest():
            should_write = False
            # print(f"'{os.path.basename(filepath)}' er u칝ndret. Springer over.")
    except FileNotFoundError:
        # Filen eksisterer ikke, s친 vi skal skrive den
        pass

    if should_write:
        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(new_content)
        print(f"Success! '{os.path.basename(filepath)}' er blevet genereret/opdateret!")
        return True
    return False

# ---- FUNKTION TIL AT GENERERE INGREDIENS-SIDEN ----
def generate_ingredients_page():
    # ... (din eksisterende funktion - ingen 칝ndringer n칮dvendige her)
    # For fuldst칝ndighed, tilf칮jer vi den ogs친 til den betingede logik
    print("Starter generering af Ingrediens-siden...")
    db_path = os.path.join(DATA_DIR, 'Ingrediensdatabase.csv')
    try:
        df = pd.read_csv(db_path, skiprows=11, header=None, encoding='utf-8')
        df.dropna(how='all', inplace=True)
    except Exception as e:
        print(f"FEJL under indl칝sning af ingrediensdatabase: {e}")
        return

    markdown_content = """---
title: "Den Komplette Ingrediensdatabase"
date: {now}
lastmod: {now}
draft: false
---

Dette ark er hjertet og den absolutte grundsten i dit is-laboratorium. Det er den centrale kilde, hvorfra "Opskrift Udregneren" henter al sin viden.
""".format(now=datetime.now().strftime('%Y-%m-%d'))
    
    # ... resten af din logik for at bygge tabellen ...
    for index, row in df.iterrows():
        if 'Ingrediens' in str(row.iloc[0]):
            markdown_content += "\n| Ingrediens | Energi (kcal) | Fedt | Kulh. | Sukker | Protein | Salt | PAC | MSNF | HF | Kommentar |\n"
            markdown_content += "|:---|---:|---:|---:|---:|---:|---:|---:|---:|---:|:---|\n"
        elif pd.notna(row.iloc[0]) and row.iloc[1:].isnull().all():
            markdown_content += f"\n## {row.iloc[0]}\n\n"
        elif pd.notna(row.iloc[0]):
            row = row.fillna('')
            markdown_content += (
                f"| {row.iloc[0]} | {row.iloc[1]} | {row.iloc[2]} | {row.iloc[3]} | "
                f"{row.iloc[4]} | {row.iloc[5]} | {row.iloc[6]} | {row.iloc[7]} | "
                f"{row.iloc[8]} | {row.iloc[9]} | {row.iloc[10]} |\n"
            )

    write_if_changed(INGREDIENTS_PAGE_PATH, markdown_content)


# ---- DEN DEFINITIVE FUNKTION (V2) TIL STABILIZER MIX ----
def generate_stabilizer_page():
    """
    Genererer den dedikerede side for Ditz3n Stabilizer Mix.
    - Bruger pandas til at l칝se den rene tabelstruktur.
    - Skaber to separate tabeller: en for ingredienser og en for totaler med overskrift.
    - Er simpel, robust og let at vedligeholde.
    """
    print("\nGenererer Ditz3n Stabilizer Mix side (endelig version)...")
    source_file = os.path.join(DATA_DIR, 'Ditz3n_Stabilizer_Mix.csv')
    
    try:
        # Trin 1: Find startlinjen for tabellen.
        # *** 칁NDRING 1: Leder nu efter "Ingrediens" (ental) ***
        header_row_index = 0
        with open(source_file, 'r', encoding='utf-8-sig') as f:
            for i, line in enumerate(f):
                if 'Ingrediens,M칝ngde (g)' in line:
                    header_row_index = i
                    break
        
        if header_row_index == 0:
            raise ValueError("Kunne ikke finde tabellens header. Tjek CSV-filen.")

        # Trin 2: L칝s kun tabel-data ind med pandas.
        df = pd.read_csv(source_file, skiprows=header_row_index, encoding='utf-8')
        df.dropna(how='all', inplace=True)

        # Trin 3: Opdel data i ingredienser og totaler.
        # Bruger den nye kolonne-header "Ingrediens".
        ingredients_df = df[df['Ingrediens'] != 'Total:'].copy()
        total_df = df[df['Ingrediens'] == 'Total:'].copy()

        # Funktion til at bygge en p칝n Markdown-tabel fra en DataFrame
        def build_markdown_table(dataframe):
            header = "| " + " | ".join(dataframe.columns) + " |"
            separator = "|:---|:---|" + ":---:|" * (len(dataframe.columns) - 2)
            body_rows = []
            for _, row in dataframe.iterrows():
                processed_row = [str(cell).replace(',', '.').replace('nan', '') for cell in row]
                body_rows.append("| " + " | ".join(processed_row) + " |")
            return "\n".join([header, separator] + body_rows)

        # Trin 4: Byg de to separate tabeller
        ingredients_table = build_markdown_table(ingredients_df)
        total_table = build_markdown_table(total_df)

    except FileNotFoundError:
        print(f"ADVARSEL: Kunne ikke finde '{source_file}'. Siden bliver ikke genereret.")
        return
    except Exception as e:
        print(f"FEJL under l칝sning af Stabilizer Mix fil: {e}")
        return

    # Trin 5: S칝t det hele sammen til den endelige side
    markdown_content = f"""---
title: "Ditz3n Stabilizer Mix"
date: {datetime.now().strftime('%Y-%m-%d')}
lastmod: {datetime.now().strftime('%Y-%m-%d')}
draft: false
showReadingTime: false
---

At lave denne blanding handler om pr칝cision og om at undg친 klumper. F칮lg disse trin, og du vil have succes hver gang.

### Ingredienser
{ingredients_table}

### Totaler
{total_table}

### N칮dvendigt udstyr:
- En pr칝cis digitalv칝gt (en juvel칠rv칝gt, der kan m친le 0.01g, er ideel til de sm친 m칝ngder gummi).
- Et rent, t칮rt glas med et t칝tsluttende l친g (f.eks. et stort syltet칮jsglas).

### Trin-for-trin guide:
1.  **Afvej de store ingredienser:** Start med at afveje de "store" pulvere direkte ned i dit t칮rre glas. F칮rst 100g Erythritol og derefter 100g Inulin.
2.  **Afvej de sm친 ingredienser:** Nu kommer det vigtigste. Afvej de sm친, men potente ingredienser: 10g CMC, 3,5g Guargummi, 1,0g Xanthangummi og 3,5g Salt. Tilf칮j dem oven p친 de store pulvere i glasset.
3.  **Den vigtige t칮rblanding:** S칝t l친get p친 glasset og s칮rg for, at det er helt t칝t. Ryst nu glasset kraftigt i 30-60 sekunder. Dette trin er altafg칮rende. Form친let er at fordele de sm친 gummi-partikler (CMC, guar, xanthan) j칝vnt mellem de st칮rre krystaller af erythritol og inulin. Dette forhindrer dem i at klistre sammen og danne uopl칮selige klumper, n친r de rammer v칝ske. Blandingen skal se helt homogen og ensartet ud.

### Opbevaring:
Din "Ditz3n Stabilizer Mix" er nu klar. Opbevar den i det t칝tsluttende glas ved stuetemperatur. Den er nu en potent alt-i-칠n ingrediens.

### S친dan bruger du den:
N친r din Ninja CREAMi-opskrift kr칝ver s칮dning og stabilisering, skal du blot afveje den anbefalede m칝ngde af din nye blanding (f.eks. 30g for en Deluxe pint) og tilf칮je den til dine andre t칮rre ingredienser (som proteinpulver), f칮r du pisker det hele sammen med dine v친de ingredienser (m칝lk, vand osv.).

> Ved at lave denne blanding p친 forh친nd, har du fjernet besv칝ret og usikkerheden ved at skulle afveje sm친, flyvske m칝ngder gummi hver eneste gang. Det g칮r hele processen hurtigere, nemmere og langt mere pr칝cis. 游땒
"""
    
    write_if_changed(STABILIZER_PAGE_PATH, markdown_content)

# ---- FUNKTION TIL AT GENERERE OPSKRIFTS-SIDER ----
def generate_all_recipe_pages():
    recipe_files = glob.glob(os.path.join(RECIPE_DATA_DIR, '*.csv'))
    if not recipe_files:
        print("\nADVARSEL: Ingen opskrifts-filer fundet i 'data/recipes/'.")
        return
    
    print(f"\nFandt {len(recipe_files)} opskrift(er). Starter generering...")
    for recipe_file in recipe_files:
        filename = os.path.basename(recipe_file)
        recipe_name = os.path.splitext(filename)[0].replace('_', ' ')
        try:
            # ... (eksisterende logik til at l칝se og parse opskrifter)
            df = pd.read_csv(recipe_file, header=9, encoding='utf-8')
            numeric_cols = df.columns[1:]
            for col in numeric_cols:
                df[col] = pd.to_numeric(df[col].astype(str).str.replace(',', '.', regex=False), errors='coerce')
            
            total_row = df[df.iloc[:, 0].str.contains('N칝ringsindhold', na=False)].iloc[0]
            fpdf_row = df[df.iloc[:, 0].str.contains('Samlet FPDF', na=False)].iloc[0]
            msnf_row = df[df.iloc[:, 0].str.contains('MSNF %', na=False)].iloc[0]
            recipe_df = df.dropna(subset=[df.columns[1]])

            # Byg Markdown-indhold
            markdown_content = f"""---
title: "{recipe_name}"
date: {datetime.now().strftime('%Y-%m-%d')}
lastmod: {datetime.now().strftime('%Y-%m-%d')}
draft: false
---

## N칮gle-tal for Opskriften
| Kalorier i alt | FPDF | MSNF % | Protein i alt |
|:---|:---|:---|:---|
| **{total_row.iloc[2]:.0f} kcal** | **{fpdf_row.iloc[1]:.2f}** | **{msnf_row.iloc[1]:.1f}%** | **{total_row.iloc[6]:.1f}g** |

## Ingredienser
| Ingrediens | M칝ngde (g) |
|:---|---:|
"""
            for index, row in recipe_df.iterrows():
                if not row.iloc[0].startswith(('N칝ringsindhold', 'Samlet FPDF', 'MSNF %')):
                    markdown_content += f"| {row.iloc[0]} | {row.iloc[1]:.1f}g |\n"

            markdown_content += """
## Fremgangsm친de
*Dette er en standard-skabelon. Juster den efter behov.*

1.  Blend alle ingredienser grundigt.
2.  H칝ld i b칮tten og frys i minimum 24 timer.
3.  K칮r p친 det relevante program.
"""
            # Definer output sti
            output_dir = os.path.join(RECIPE_CONTENT_DIR, recipe_name.replace(' ', '_'))
            output_path = os.path.join(output_dir, 'index.md')
            
            # Brug den nye smarte funktion til at skrive filen
            write_if_changed(output_path, markdown_content)

        except Exception as e:
            print(f"FEJL under generering af '{recipe_name}': {e}")


# ---- HOVED-BLOK: K칒R HELE SYSTEMET ----
if __name__ == "__main__":
    generate_ingredients_page()
    generate_stabilizer_page() # <-- KALD TIL DEN NYE FUNKTION
    generate_all_recipe_pages()
    print("\nAlle sider er blevet tjekket og eventuelt opdateret. Du er klar til at k칮re 'hugo server'.")